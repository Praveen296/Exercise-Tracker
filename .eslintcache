[{"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\reportWebVitals.js":"1","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\App.js":"2","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\index.js":"3","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\navbar.js":"4","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\edit-exercises.js":"5","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\create-exercises.js":"6","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\exercises-list.js":"7","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\create-user.js":"8","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\axios.js":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":843,"mtime":1606640854347,"results":"12","hashOfConfig":"11"},{"size":177,"mtime":1606640802025,"results":"13","hashOfConfig":"11"},{"size":797,"mtime":1606641513751,"results":"14","hashOfConfig":"11"},{"size":7553,"mtime":1614562643969,"results":"15","hashOfConfig":"11"},{"size":6807,"mtime":1614566840228,"results":"16","hashOfConfig":"11"},{"size":3136,"mtime":1614451386755,"results":"17","hashOfConfig":"11"},{"size":2463,"mtime":1614442106414,"results":"18","hashOfConfig":"11"},{"size":132,"mtime":1606715254591,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7abk71",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\reportWebVitals.js",[],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\App.js",[],["40","41"],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\index.js",[],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\navbar.js",[],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\edit-exercises.js",["42"],"import React,{useState,useEffect, useRef} from 'react';\r\nimport axios from './../axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nfunction EditExercise(props) {\r\n\r\n  const [username,setUsername] = useState('');\r\n  const [description,setDescription] = useState('');\r\n  const [duration,setDuration] = useState('');\r\n  const [date,setDate] = useState(new Date());\r\n  const [users,setUsers] = useState([]);\r\n  const textInput = useRef(\"userInput\");\r\n\r\n  useEffect(() => {\r\n\r\n    axios.get('/exercises/'+ props.match.params.id)\r\n        .then(response => {\r\n\r\n          setUsername(response.data.username);\r\n          setDescription(response.data.description);\r\n          setDuration(response.data.duration);\r\n          setDate(new Date(response.data.date));   \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n  \r\n    axios.get('/users/')\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          console.log(response.data);\r\n          const allUserNames = response.data.map(user => user.username);\r\n          console.log(allUserNames);\r\n          setUsers(allUserNames);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  },[]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const exercise = {\r\n        username : username,\r\n        description : description,\r\n        duration : duration,\r\n        date : date\r\n    }\r\n\r\n    console.log(exercise);\r\n    axios.put('/exercises/' + props.match.params.id, exercise)\r\n        .then(res => console.log(res.data));\r\n\r\n    //setDate(new Date());    \r\n      \r\n  \r\n    window.location = '/';\r\n\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h3>Edit Exercise Log </h3>\r\n\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <select ref={textInput}\r\n                required\r\n                className=\"form-control\"\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}>\r\n                {\r\n                  users.map(function(user) {\r\n                    return <option \r\n                      key={user}\r\n                      value={user}>{user}\r\n                      </option>;\r\n                  })\r\n                }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\"> \r\n            <label>Description: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Duration (in minutes): </label>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                value={duration}\r\n                onChange={e => setDuration(e.target.value)}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date: </label>\r\n            <div>\r\n              <DatePicker\r\n                selected={date}\r\n                onChange={date => setDate(date)}\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default EditExercise\r\n\r\n/*\r\nexport default class EditExercise extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.onChangeUsername = this.onChangeUsername.bind(this);\r\n      this.onChangeDescription = this.onChangeDescription.bind(this);\r\n      this.onChangeDuration = this.onChangeDuration.bind(this);\r\n      this.onChangeDate = this.onChangeDate.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  \r\n      this.state = {\r\n        username: '',\r\n        description: '',\r\n        duration: 0,\r\n        date: new Date(),\r\n        users: []\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      axios.get('/exercises/'+this.props.match.params.id)\r\n        .then(response => {\r\n          this.setState({\r\n            username: response.data.username,\r\n            description: response.data.description,\r\n            duration: response.data.duration,\r\n            date: new Date(response.data.date)\r\n          })   \r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n  \r\n      axios.get('users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              users: response.data.map(user => user.username),\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n  \r\n    }\r\n  \r\n    onChangeUsername(e) {\r\n      this.setState({\r\n        username: e.target.value\r\n      })\r\n    }\r\n  \r\n    onChangeDescription(e) {\r\n      this.setState({\r\n        description: e.target.value\r\n      })\r\n    }\r\n  \r\n    onChangeDuration(e) {\r\n      this.setState({\r\n        duration: e.target.value\r\n      })\r\n    }\r\n  \r\n    onChangeDate(date) {\r\n      this.setState({\r\n        date: date\r\n      })\r\n    }\r\n  \r\n    onSubmit(e) {\r\n      e.preventDefault();\r\n  \r\n      const exercise = {\r\n        username: this.state.username,\r\n        description: this.state.description,\r\n        duration: this.state.duration,\r\n        date: this.state.date\r\n      }\r\n  \r\n      console.log(exercise);\r\n  \r\n      axios.put('/exercises/' + this.props.match.params.id, exercise)\r\n        .then(res => console.log(res.data));\r\n  \r\n      window.location = '/';\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n      <div>\r\n        <h3>Edit Exercise Log </h3>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\"> \r\n            <label>Username: </label>\r\n            <select ref=\"userInput\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}>\r\n                {\r\n                  this.state.users.map(function(user) {\r\n                    return <option \r\n                      key={user}\r\n                      value={user}>{user}\r\n                      </option>;\r\n                  })\r\n                }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\"> \r\n            <label>Description: </label>\r\n            <input  type=\"text\"\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Duration (in minutes): </label>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                value={this.state.duration}\r\n                onChange={this.onChangeDuration}\r\n                />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Date: </label>\r\n            <div>\r\n              <DatePicker\r\n                selected={this.state.date}\r\n                onChange={this.onChangeDate}\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      )\r\n    }\r\n  }*/","D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\create-exercises.js",[],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\exercises-list.js",["43"],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\components\\create-user.js",[],"D:\\MERN Projects\\Exercise Tracker\\mern-exercise-tracker\\src\\axios.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":42,"column":5,"nodeType":"50","endLine":42,"endColumn":7,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":12,"column":60,"nodeType":"54","endLine":12,"endColumn":129},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [props.match.params.id]",{"range":"60","text":"61"},[1285,1287],"[props.match.params.id]"]